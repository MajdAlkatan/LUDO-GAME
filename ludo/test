onDiceClick() {
    console.log('Dice clicked!');
    
    // For testing, simulate rolling three 6s in a row
    if (!this.testConsecutiveSixes) {
        this.testConsecutiveSixes = 0; // Initialize test counter if not already set
    }

    if (this.testConsecutiveSixes < 3) {
        this.diceValue = 6; // Force a 6 roll for the test
        this.testConsecutiveSixes += 1;
    } else {
        // Calculate the dice value based on the defined probability distribution
        const rollProbabilities = AI_CONFIG.ROLL_PROBABILITIES; // [1/6, 1/6, 1/6, 1/6, 1/6, 1/6]
        const cumulativeProbabilities = rollProbabilities.reduce((acc, prob, index) => {
            acc.push((acc[index - 1] || 0) + prob);
            return acc;
        }, []);
    
        const randomValue = Math.random();
        this.diceValue = cumulativeProbabilities.findIndex(cumProb => randomValue < cumProb) + 1;
    }

    console.log(`Dice rolled: ${this.diceValue}`);

    // Track consecutive 6s
    if (this.diceValue === 6) {
        this.consecutiveSixes = (this.consecutiveSixes || 0) + 1;
    } else {
        this.consecutiveSixes = 0; // Reset if it's not a 6
    }

    // If three 6s in a row, change turn
    if (this.consecutiveSixes === 3) {
        console.log("Three 6s rolled! Changing turn...");
        this.incrementTurn();
        this.consecutiveSixes = 0; // Reset after switching turn
    }

    this.state = STATE.DICE_ROLLED;

    this.checkForEligiblePieces();
}

// Reset the test counter for consecutive 6s when you want to start the test again
resetTestConsecutiveSixes() {
    this.testConsecutiveSixes = 0; // Reset the test counter
}
